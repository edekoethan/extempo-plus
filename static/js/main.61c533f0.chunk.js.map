{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","showForm","setShowForm","useState","currentImageIndex","setCurrentImageIndex","currentStep","setCurrentStep","showResults","setShowResults","results","setResults","showModal","setShowModal","images","useEffect","interval","setInterval","prevIndex","length","clearInterval","formData","setFormData","patientName","drugName","patientWeight","prescribedDose","availableTabletStrength","administeredDose","frequencyOfUse","durationOfUse","formSteps","Object","keys","handleShowModal","updateDate","dateString","Date","toLocaleString","createdDateElement","document","getElementById","innerText","addEventListener","querySelectorAll","forEach","flashcard","style","transform","React","createElement","className","id","href","target","rel","onClick","src","alt","class","handleCloseModal","handleDownload","modalContent","querySelector","html2canvas","then","canvas","link","toDataURL","download","click","type","name","placeholder","display","size","htmlFor","alert","value","onChange","e","[object Object]","replace","toUpperCase","handlePrevious","prev","Math","max","handleNext","min","handleCalculate","totalNumberOfTablets","calculateTotalNumberOfTablets","totalVolume","calculateTotalVolume","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.61c533f0.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport html2canvas from 'html2canvas';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const [showResults, setShowResults] = useState(false);\r\n  const [results, setResults] = useState(\"\");\r\n  const [showModal, setShowModal] = useState(false); // State to manage modal visibility\r\n\r\n  const images = [\r\n    '/public/pharmacists1.png',\r\n    '/public/pharmacists2.png',\r\n    '/public/pharmacists3.png',\r\n    '/public/pharmacists4.png',\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrentImageIndex((prevIndex) => (prevIndex + 1) % images.length);\r\n    }, 3000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [images.length]);\r\n\r\n  const [formData, setFormData] = useState({\r\n    patientName: '',\r\n    drugName: '',\r\n    patientWeight: '',\r\n    prescribedDose: '',\r\n    availableTabletStrength: '',\r\n    administeredDose: '',\r\n    frequencyOfUse: '',\r\n    durationOfUse: '',\r\n  });\r\n\r\n  const formSteps = Object.keys(formData);\r\n\r\n  const handleInputChange = (e) => {\r\n    setFormData({ ...formData, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setCurrentStep((prev) => Math.min(prev + 1, formSteps.length - 1));\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    setCurrentStep((prev) => Math.max(prev - 1, 0));\r\n  };\r\n\r\n  const calculateTotalNumberOfTablets = (prescribedDose, frequencyOfUse, durationOfUse, availableTabletStrength) => {\r\n    return (prescribedDose * frequencyOfUse * durationOfUse) / availableTabletStrength;\r\n  };\r\n\r\n  const calculateTotalVolume = (prescribedDose, frequencyOfUse, durationOfUse, administeredDose) => {\r\n    return (prescribedDose * frequencyOfUse * durationOfUse * administeredDose) / prescribedDose;\r\n  };\r\n\r\n  const handleCalculate = () => {\r\n    const { prescribedDose, frequencyOfUse, durationOfUse, availableTabletStrength, administeredDose } = formData;\r\n    const totalNumberOfTablets = calculateTotalNumberOfTablets(prescribedDose, frequencyOfUse, durationOfUse, availableTabletStrength);\r\n    const totalVolume = calculateTotalVolume(prescribedDose, frequencyOfUse, durationOfUse, administeredDose);\r\n\r\n    const result = `Total number of tablets: ${totalNumberOfTablets}\\nTotal volume: ${totalVolume}`;\r\n    setResults(result);\r\n    setShowResults(true); // Show results modal\r\n  };\r\n\r\n  const handleShowModal = () => {\r\n    setShowModal(true);\r\n    updateDate();\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const updateDate = () => {\r\n    const currentDate = new Date();\r\n    const dateString = currentDate.toLocaleString();\r\n    const createdDateElement = document.getElementById(\"created_date\");\r\n    if (createdDateElement) {\r\n      createdDateElement.innerText = dateString;\r\n    }\r\n  };\r\n\r\n  const handleDownload = () => {\r\n    const modalContent = document.querySelector('.modal-content');\r\n    html2canvas(modalContent).then((canvas) => {\r\n      const link = document.createElement('a');\r\n      link.href = canvas.toDataURL('image/jpeg');\r\n      link.download = 'modal-content.jpg';\r\n      link.click();\r\n    });\r\n  };\r\n\r\n    // JavaScript for flipping flashcards every 5 seconds\r\n    document.addEventListener('DOMContentLoaded', function () {\r\n      const flashcards = document.querySelectorAll('.flashcard-inner');\r\n      \r\n      flashcards.forEach((flashcard) => {\r\n          flashcard.addEventListener('click', () => {\r\n          flashcard.style.transform = flashcard.style.transform === 'rotateY(180deg)' ? 'rotateY(0deg)' : 'rotateY(180deg)';\r\n          });\r\n      });\r\n  });\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <ul id=\"menu\">\r\n        <div className=\"menu-group left\">\r\n          <li><a href=\"https://studixshare.com/login\" target=\"_blank\" rel=\"noopener noreferrer\">Log-In</a></li>\r\n          <li><a href=\"https://example.com\">Blog-Post</a></li>\r\n          <li><a href=\"https://studixshare.com/login\"target=\"_blank\" rel=\"noopener noreferrer\">Try Flashcards</a></li>\r\n        </div>\r\n        <div className=\"menu-group center\">\r\n          <li><a href=\"https://example.com\">Generate Instructions</a></li>\r\n          <li><a href=\"https://example.com\" onClick={handleShowModal}>Create Label</a></li>\r\n          <li><a href=\"https://example.com\" onClick={() => setShowForm(true)}>Calculate Quantities</a></li>\r\n        </div>\r\n        <div className=\"menu-group right\">\r\n          <li><a href=\"https://studixshare.com/contact\" target=\"_blank\" rel=\"noopener noreferrer\">Contact Us</a></li>\r\n          <li><a href=\"https://example.com\">FAQ</a></li>\r\n          <li><a href=\"https://studixshare.com/support\" target=\"_blank\" rel=\"noopener noreferrer\">Support</a></li>\r\n        </div>\r\n      </ul>\r\n\r\n      <div className=\"slider\">\r\n        <img src={images[currentImageIndex]} alt={`Slide ${currentImageIndex + 1}`} />\r\n      </div>\r\n\r\n      <div className=\"content\">\r\n        <h1>Extempo-Plus</h1>\r\n        <p>\r\n          Extempo-Plus is a web application that helps pharmacists to perform extemporaneous preparations quickly and accurately.\r\n          <br></br>It also helps to create automated labels for these preparations.\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"calculate-quantities\">\r\n        <div className=\"quantities\">\r\n          <h2>Calculate Quantities</h2>\r\n          <p>Calculate the quantities of drugs to be administered to patients.</p>\r\n          <p>Quantities are calculated based on the patient's weight, prescribed dose, and other factors.</p>\r\n          <p>Quantities are easy to calculate.</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"info-graphics-data1\">\r\n        <div className=\"info-graphics\">\r\n          <div className=\"info-graphic\">\r\n            <p id=\"save-over-text\">Save over</p>\r\n            <img src=\"/timer1.png\" alt=\"6 minutes info graphics\" />\r\n            <p id=\"on-each\">On each compounding with extempo app</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"features\">\r\n        <div className=\"feature\">\r\n          <h2>Generate Instructions</h2>\r\n          <p>Generate compounding instructions for each patients with the click of a button.</p>\r\n          <p>Instructions are generated based on the dosage form, type of medications, patient's weight, prescribed dose, and other factors.</p>\r\n          <p>Instructions are easy to understand and follow.</p>\r\n          <p>Instructions can be customized to suit the patient's needs.</p>\r\n          <p>Instructions can be generated for different types of drugs.</p>\r\n          <p>Instructions can be generated for different types of patients.</p>\r\n          <p>Instructions can be generated for different types of diseases.</p>\r\n          <p>Instructions can be generated for different types of treatments.</p>\r\n          <p>Click below to start</p>\r\n        </div>\r\n      </div>\r\n\r\n      <button onClick={handleShowModal} className=\"generate-instructions-button\">Generate Instructions</button>\r\n\r\n      <div className=\"flashcard-header\"> \r\n        <p>Try Our Flashcard App</p>\r\n      </div>\r\n\r\n\r\n      <section class=\"flashcard-section\">\r\n        <div class=\"flashcard\">\r\n            <div class=\"flashcard-inner\">\r\n                <div class=\"flashcard-front\">A 35-year-old with appendicitis requires surgery. He has a family history of malignant hyperthermia. The agent most appropriate is? Isoflurane or Propofol</div>\r\n                <div class=\"flashcard-back\">Propofol is safe in patients susceptible to malignant hyperthermia. Isoflurane, sevoflurane, desflurane and succinylcholine are considered triggering agents</div>\r\n            </div>\r\n        </div>\r\n      </section>\r\n    \r\n      <div class=\"try-flashcards\">Click <a href=\"https://studixshare.com/login\" target=\"_blank\" rel=\"noopener noreferrer\">here</a> to sign-up for flashcards</div>\r\n\r\n      {/* Modal for displaying results */}\r\n      {showResults && (\r\n        <div className=\"results-modal\">\r\n          <div className=\"results-content\">\r\n            <h2>Result Sheet</h2>\r\n            <pre>{results}</pre>\r\n            <button onClick={() => setShowResults(false)} id=\"result-close-button\">X</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Modal for AI-Generate form */}\r\n      {showModal && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <button onClick={handleCloseModal} className=\"close-button\">X</button>\r\n            <button onClick={handleDownload} className=\"download-button\">Download</button>\r\n            <div id=\"Drug-label\">\r\n              <div id=\"label-ID-container\">\r\n                <input type=\"text\" id=\"label-ID\" name=\"label-ID\" placeholder=\"Label-ID\" /><br />\r\n              </div>\r\n              <div id=\"DrugName\">\r\n                <input type=\"text\" name=\"DrugName\" placeholder=\"Drug Name\" /><br />\r\n              </div>\r\n              <div id=\"shake-the-mixture\">\r\n                <p><strong>Shake The Mixture</strong></p>\r\n              </div>\r\n              <div id=\"instructions\">\r\n                <div style={{ display: 'inline-block' }}>\r\n                  Give\r\n                  <form style={{ display: 'inline-block' }}>\r\n                    <input type=\"number\" name=\"dose\" size=\"2\" placeholder=\"Dose\" />\r\n                  </form>\r\n                  <form style={{ display: 'inline-block' }}>\r\n                    <input type=\"number\" name=\"frequency\" size=\"2\" placeholder=\"Frequency\" />\r\n                  </form>\r\n                  Time(s) daily\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"name\">Name:</label>\r\n                <input type=\"text\" id=\"name\" name=\"name\" placeholder=\"Patient Name\"/>\r\n                <div id=\"date\">\r\n                  <p>Date Of Manufacture: <span id=\"created_date\">{new Date().toLocaleString()}</span></p>\r\n                </div>\r\n                <div id=\"primInstructions\">\r\n                  <p><strong>Discard after 14 days <br />Keep Drug Away from Children </strong></p>\r\n                </div>\r\n                <div id=\"place-of-manufacture\">\r\n                  <input type=\"text\" placeholder=\"Place of Manufacture\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <button onClick={() => alert('Connect device to printer')} className=\"print-button\">Print</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Modal for form */}\r\n      {showForm && (\r\n        <div className=\"modal\">\r\n          <div className=\"form-modal\">\r\n            <button onClick={() => setShowForm(false)} className=\"close-button\">X</button>\r\n            <div className=\"form-container\">\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  id={formSteps[currentStep]}\r\n                  value={formData[formSteps[currentStep]]}\r\n                  onChange={handleInputChange}\r\n                  placeholder={formSteps[currentStep].replace(/([A-Z])/g, ' $1').toUpperCase()}\r\n                  className=\"form-input\"\r\n                />\r\n              </div>\r\n              <div className=\"navigation-buttons\">\r\n                {currentStep > 0 && <button onClick={handlePrevious} className=\"nav-button\">Previous</button>}\r\n                {currentStep < formSteps.length - 1 ? (\r\n                  <button onClick={handleNext} className=\"nav-button\">Next</button>\r\n                ) : (\r\n                  <button onClick={handleCalculate} className=\"submit-button\">Submit</button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"footer\">\r\n        <p>&copy; 2024 extempo-plus app | Powered by Studixshare</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}